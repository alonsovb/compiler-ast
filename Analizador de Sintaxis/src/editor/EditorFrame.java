/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package editor;

import AST.AGoal;
import AST.AST;
import Imprimir.imprimir_arbol;
import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import proyecto.Driver;

/**
 *
 * @author Alonso
 */
public class EditorFrame extends javax.swing.JFrame {

    private JFileChooser fileChooser = new JFileChooser(System.getProperty("user.dir"));

    /**
     * Creates new form Editor
     */
    public EditorFrame() {
        initComponents();
        fileChooser.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f) {
                if (f.isDirectory()) {
                    return true;
                }
                return (f.getName().endsWith(".txt") || f.getName().endsWith(".java"));
            }

            @Override
            public String getDescription() {
                return "Java source";
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        SplitPanel = new javax.swing.JSplitPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tree = new javax.swing.JTree();
        jScrollPane3 = new javax.swing.JScrollPane();
        EditorPane = new javax.swing.JEditorPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        TerminalPane = new javax.swing.JEditorPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        OpenFileMenuItem = new javax.swing.JMenuItem();
        SaveFileMenuItem = new javax.swing.JMenuItem();
        QuitMenuItem = new javax.swing.JMenuItem();
        RunMenu = new javax.swing.JMenu();
        CompileMenuItem = new javax.swing.JMenuItem();
        TreeMenu = new javax.swing.JMenu();
        ExpandAllTreeMenu = new javax.swing.JMenuItem();
        CollapseAllMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Compiler");

        jSplitPane1.setDividerLocation(400);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        SplitPanel.setDividerLocation(500);
        SplitPanel.setMinimumSize(new java.awt.Dimension(600, 300));

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Goal");
        Tree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        Tree.setMaximumSize(new java.awt.Dimension(300, 64));
        jScrollPane2.setViewportView(Tree);

        SplitPanel.setRightComponent(jScrollPane2);

        jScrollPane3.setMinimumSize(new java.awt.Dimension(500, 300));

        EditorPane.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        EditorPane.setMinimumSize(new java.awt.Dimension(500, 200));
        jScrollPane3.setViewportView(EditorPane);

        SplitPanel.setLeftComponent(jScrollPane3);

        jSplitPane1.setTopComponent(SplitPanel);

        TerminalPane.setEditable(false);
        TerminalPane.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jScrollPane1.setViewportView(TerminalPane);

        jSplitPane1.setRightComponent(jScrollPane1);

        FileMenu.setText("File");

        OpenFileMenuItem.setText("Open");
        OpenFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenFileMenuItemActionPerformed(evt);
            }
        });
        FileMenu.add(OpenFileMenuItem);

        SaveFileMenuItem.setText("Save");
        SaveFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveFileMenuItemActionPerformed(evt);
            }
        });
        FileMenu.add(SaveFileMenuItem);

        QuitMenuItem.setText("Quit");
        QuitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitMenuItemActionPerformed(evt);
            }
        });
        FileMenu.add(QuitMenuItem);

        jMenuBar1.add(FileMenu);

        RunMenu.setText("Run");

        CompileMenuItem.setText("Compile");
        CompileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompileMenuItemActionPerformed(evt);
            }
        });
        RunMenu.add(CompileMenuItem);

        jMenuBar1.add(RunMenu);

        TreeMenu.setText("Tree");

        ExpandAllTreeMenu.setText("Expand all");
        ExpandAllTreeMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExpandAllTreeMenuActionPerformed(evt);
            }
        });
        TreeMenu.add(ExpandAllTreeMenu);

        CollapseAllMenuItem.setText("Collapse all");
        CollapseAllMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CollapseAllMenuItemActionPerformed(evt);
            }
        });
        TreeMenu.add(CollapseAllMenuItem);

        jMenuBar1.add(TreeMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 951, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OpenFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenFileMenuItemActionPerformed

        
        fileChooser.showOpenDialog(this);
        if (fileChooser.getSelectedFile() != null) {
            try {
                EditorPane.setText(new Scanner(fileChooser.getSelectedFile()).useDelimiter("\\Z").next());
                reportMessage("File loaded: " + fileChooser.getSelectedFile().getName());
            } catch (FileNotFoundException ex) {
            }
        }

    }//GEN-LAST:event_OpenFileMenuItemActionPerformed

    private void SaveFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveFileMenuItemActionPerformed

        fileChooser.showSaveDialog(this);
        File selectedFile = fileChooser.getSelectedFile();
        if (fileChooser.getSelectedFile() == null)
            return;
        String filePath = selectedFile.getPath();
        if (!filePath.toLowerCase().endsWith(".txt") && !filePath.toLowerCase().endsWith(".java")) {
            selectedFile = new File(filePath + ".java");
        }
        try {
            if (selectedFile != null) {
                if (selectedFile.exists())
                    selectedFile.delete();
                if (selectedFile.createNewFile()) {
                    PrintWriter pw = new PrintWriter(selectedFile);
                    String text = EditorPane.getText();
                    pw.println(text);
                    pw.close();
                    reportMessage("File saved: " + selectedFile.getName());
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(EditorFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_SaveFileMenuItemActionPerformed

    private void QuitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitMenuItemActionPerformed

        System.exit(0);

    }//GEN-LAST:event_QuitMenuItemActionPerformed

    private void CompileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompileMenuItemActionPerformed

        // Obtener c√≥digo del editor
        String source = EditorPane.getText();

        Driver d = new Driver(this);
        try {
            AST arbol = d.parse(source);
            if (arbol != null) {
                Imprimir.imprimir_arbol imp = new imprimir_arbol();
                DefaultMutableTreeNode tree = new DefaultMutableTreeNode();
                AGoal goal = (AGoal) arbol;
                imp.visitAGoal(goal, tree);
                Tree.setModel(new DefaultTreeModel(tree));
                reportMessage("Successfully compiled.");
            }
        } catch (NullPointerException npe) {
            // reportError("Null pointer");
            System.out.println("Null pointer");
        } catch (Exception ex) {
            reportError(ex.getMessage());
        }

    }//GEN-LAST:event_CompileMenuItemActionPerformed

    private void ExpandAllTreeMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExpandAllTreeMenuActionPerformed
        
        for (int i = 0; i < Tree.getRowCount(); i++) {
            Tree.expandRow(i);
        }
        
    }//GEN-LAST:event_ExpandAllTreeMenuActionPerformed

    private void CollapseAllMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CollapseAllMenuItemActionPerformed
        
        for (int i = 0; i < Tree.getRowCount(); i++) {
            Tree.collapseRow(i);
        }
        
    }//GEN-LAST:event_CollapseAllMenuItemActionPerformed

    
    public void reportError(String message) {
        TerminalPane.setForeground(Color.red);
        TerminalPane.setText(TerminalPane.getText() + "\n" + message);
    }
    
    public void reportMessage(String message) {
        TerminalPane.setForeground(Color.black);
        TerminalPane.setText(message);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new EditorFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem CollapseAllMenuItem;
    private javax.swing.JMenuItem CompileMenuItem;
    private javax.swing.JEditorPane EditorPane;
    private javax.swing.JMenuItem ExpandAllTreeMenu;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenuItem OpenFileMenuItem;
    private javax.swing.JMenuItem QuitMenuItem;
    private javax.swing.JMenu RunMenu;
    private javax.swing.JMenuItem SaveFileMenuItem;
    private javax.swing.JSplitPane SplitPanel;
    private javax.swing.JEditorPane TerminalPane;
    private javax.swing.JTree Tree;
    private javax.swing.JMenu TreeMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    // End of variables declaration//GEN-END:variables
}
